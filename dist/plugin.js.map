{"version":3,"sources":["plugin.ts"],"names":[],"mappings":"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","file":"plugin.js","sourceRoot":"../src","sourcesContent":["import 'source-map-support/register';\n\nimport Serverless from 'serverless';\nimport type { ChangeSubscription, MessageSubscription } from '@commercetools/platform-sdk';\nimport path from 'path';\nimport fs from 'fs-extra';\nimport type { CloudFormationResource } from 'serverless/plugins/aws/provider/awsProvider';\n\ninterface Options {}\n\ninterface Config {\n\tprojectKey: string;\n\tclientId: string;\n\tclientSecret: string;\n\tapiHost: string;\n\tauthHost: string;\n}\n\ninterface CTEvent {\n\tcommerceTools: {\n\t\tsubscription?: {\n\t\t\tchanges: ChangeSubscription[];\n\t\t\tmessages: MessageSubscription[];\n\t\t} & (\n\t\t\t| {\n\t\t\t\t\tqueueUrl: { Ref: string } | undefined;\n\t\t\t\t\tqueueArn: { 'Fn::GetAtt': string[] } | undefined;\n\t\t\t\t\tcreateQueue: false | undefined;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tqueueUrl: { Ref: string } | undefined;\n\t\t\t\t\tqueueArn: { 'Fn::GetAtt': string[] } | undefined;\n\t\t\t\t\tcreateQueue: true;\n\t\t\t  }\n\t\t);\n\t};\n}\n\nfunction isCTEvent(e: object): e is CTEvent {\n\treturn e.hasOwnProperty('commerceTools');\n}\n\nclass ServerlessPlugin {\n\tcommands = {};\n\n\tprivate s3CustomResourceArtifactPath: string | undefined;\n\n\tconstructor(public serverless: Serverless, public options: Options) {\n\t\tserverless.configSchemaHandler.defineFunctionEvent('aws', 'commerceTools', {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tsubscription: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tchanges: {\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tresourceTypeId: { type: 'string' },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: ['resourceTypeId'],\n\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tresourceTypeId: { type: 'string' },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: ['resourceTypeId'],\n\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tqueueUrl: {\n\t\t\t\t\t\t\toneOf: [{ type: 'string' }, { type: 'object' }],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tqueueArn: {\n\t\t\t\t\t\t\toneOf: [{ type: 'string' }, { type: 'object' }],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreateQueue: { type: 'boolean' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tadditionalProperties: false,\n\t\t});\n\n\t\tserverless.configSchemaHandler.defineCustomProperties({\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tcommerceTools: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tprojectKey: { type: 'string' },\n\t\t\t\t\t\tclientId: { type: 'string' },\n\t\t\t\t\t\tclientSecret: { type: 'string' },\n\t\t\t\t\t\tapiHost: { type: 'string' },\n\t\t\t\t\t\tauthHost: { type: 'string' },\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['projectKey', 'clientId', 'clientSecret', 'apiHost', 'authHost'],\n\t\t\t\t},\n\t\t\t},\n\t\t\trequired: ['commerceTools'],\n\t\t});\n\t}\n\n\tprivate transformCFResourceName(name: string): string {\n\t\tname = name.replace('-', 'Dash').replace('_', 'Underscore');\n\t\treturn name[0].toUpperCase() + name.slice(1);\n\t}\n\n\tupdateFunctionsEvents = () => {\n\t\tconst { serverless } = this;\n\n\t\tserverless.cli.log('[CommerceTools] Updating functions events...');\n\n\t\tObject.entries(serverless.service.functions).forEach(([fnName, fn]) => {\n\t\t\tlet event: CTEvent | undefined;\n\t\t\tfn.events?.forEach((curEvent) => {\n\t\t\t\tif (!event && isCTEvent(curEvent)) {\n\t\t\t\t\tevent = curEvent;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!event) return;\n\n\t\t\tconst fnResourceName = this.transformCFResourceName(fnName);\n\n\t\t\tfn.events.push({\n\t\t\t\tsqs: {\n\t\t\t\t\tarn: {\n\t\t\t\t\t\t'Fn::GetAtt': [`${fnResourceName}SubscriptionQueue`, 'Arn'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n\n\taddResources = () => {\n\t\tconst { serverless } = this;\n\t\tconst config = serverless.service.custom.commerceTools as Config;\n\n\t\tObject.entries(serverless.service.functions).forEach(([fnName, fn]) => {\n\t\t\tlet event: CTEvent | undefined;\n\t\t\tfn.events?.forEach((curEvent) => {\n\t\t\t\tif (!event && isCTEvent(curEvent)) {\n\t\t\t\t\tevent = curEvent;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!event) return;\n\n\t\t\tserverless.cli.log(`[CommerceTools] Creating resources for ${fnName}...`);\n\n\t\t\tconst fnResourceName = this.transformCFResourceName(fnName);\n\n\t\t\tconst resourceNamePrefix = `${serverless.service.getServiceName()}-${serverless\n\t\t\t\t.getProvider('aws')\n\t\t\t\t.getStage()}-`;\n\n\t\t\tconst userResourceName = `${fnResourceName}ServiceUser`;\n\t\t\tconst userCredsResourceName = `${userResourceName}Creds`;\n\t\t\tconst customResourceName = `${fnResourceName}Subscription`;\n\t\t\tconst customResourceLambdaName = `${fnResourceName}SubscriptionTriggerLambdaFunction`;\n\t\t\tconst customResourceLambdaRoleName = `${fnResourceName}SubscriptionTriggerRole`;\n\n\t\t\tconst resources = serverless.service.provider.compiledCloudFormationTemplate.Resources;\n\n\t\t\tconst userResource: CloudFormationResource = {\n\t\t\t\tType: 'AWS::IAM::User',\n\t\t\t\tProperties: {\n\t\t\t\t\tUserName: `${resourceNamePrefix}${fnName}-ct-user`,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tresources[userResourceName] = userResource;\n\n\t\t\tresources[userCredsResourceName] = {\n\t\t\t\tType: 'AWS::IAM::AccessKey',\n\t\t\t\tProperties: {\n\t\t\t\t\tStatus: 'Active',\n\t\t\t\t\tUserName: {\n\t\t\t\t\t\tRef: userResourceName,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (event.commerceTools.subscription) {\n\t\t\t\tserverless.cli.log(\n\t\t\t\t\t`[CommerceTools] Creating subscription resources for ${fnName}...`,\n\t\t\t\t);\n\n\t\t\t\tif (event.commerceTools.subscription.createQueue) {\n\t\t\t\t\tconst queueResourceName = `${fnResourceName}SubscriptionQueue`;\n\n\t\t\t\t\tresources[queueResourceName] = {\n\t\t\t\t\t\tType: 'AWS::SQS::Queue',\n\t\t\t\t\t\tProperties: {\n\t\t\t\t\t\t\tQueueName: `${resourceNamePrefix}${fnName}-subscription-queue`,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tevent.commerceTools.subscription.queueUrl = {\n\t\t\t\t\t\tRef: queueResourceName,\n\t\t\t\t\t};\n\t\t\t\t\tevent.commerceTools.subscription.queueArn = {\n\t\t\t\t\t\t'Fn::GetAtt': [queueResourceName, 'Arn'],\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tuserResource.Properties.Policies = [\n\t\t\t\t\t{\n\t\t\t\t\t\tPolicyName: 'AllowPushToSQS',\n\t\t\t\t\t\tPolicyDocument: {\n\t\t\t\t\t\t\tVersion: '2012-10-17',\n\t\t\t\t\t\t\tStatement: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tEffect: 'Allow',\n\t\t\t\t\t\t\t\t\tAction: ['sqs:SendMessage'],\n\t\t\t\t\t\t\t\t\tResource: [event.commerceTools.subscription.queueArn],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tresources[customResourceLambdaRoleName] = {\n\t\t\t\tType: 'AWS::IAM::Role',\n\t\t\t\tProperties: {\n\t\t\t\t\tAssumeRolePolicyDocument: {\n\t\t\t\t\t\tVersion: '2012-10-17',\n\t\t\t\t\t\tStatement: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tEffect: 'Allow',\n\t\t\t\t\t\t\t\tPrincipal: {\n\t\t\t\t\t\t\t\t\tService: ['lambda.amazonaws.com'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tAction: ['sts:AssumeRole'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tManagedPolicyArns: [\n\t\t\t\t\t\t'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole',\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (!this.s3CustomResourceArtifactPath) {\n\t\t\t\tthis.s3CustomResourceArtifactPath =\n\t\t\t\t\tpath.dirname(\n\t\t\t\t\t\tresources[`${fnResourceName}LambdaFunction`].Properties.Code.S3Key,\n\t\t\t\t\t) + '/commercetools-serverless-plugin-custom-resource.zip';\n\t\t\t}\n\n\t\t\tresources[customResourceLambdaName] = {\n\t\t\t\tType: 'AWS::Lambda::Function',\n\t\t\t\tProperties: {\n\t\t\t\t\tHandler: 'lambda.handler',\n\t\t\t\t\tCode: {\n\t\t\t\t\t\tS3Bucket: {\n\t\t\t\t\t\t\tRef: 'ServerlessDeploymentBucket',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tS3Key: this.s3CustomResourceArtifactPath,\n\t\t\t\t\t},\n\t\t\t\t\tTimeout: 10,\n\t\t\t\t\tRuntime: 'nodejs12.x',\n\t\t\t\t\tRole: {\n\t\t\t\t\t\t'Fn::GetAtt': [customResourceLambdaRoleName, 'Arn'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tresources[customResourceName] = {\n\t\t\t\tType: 'Custom::CommerceToolsSubscription',\n\t\t\t\tProperties: {\n\t\t\t\t\tServiceToken: {\n\t\t\t\t\t\t'Fn::GetAtt': [customResourceLambdaName, 'Arn'],\n\t\t\t\t\t},\n\t\t\t\t\tfnName,\n\t\t\t\t\tauthHost: config.authHost,\n\t\t\t\t\tapiHost: config.apiHost,\n\t\t\t\t\tprojectKey: config.projectKey,\n\t\t\t\t\tclientId: config.clientId,\n\t\t\t\t\tclientSecret: config.clientSecret,\n\t\t\t\t\t...(event.commerceTools.subscription\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tsubscription: {\n\t\t\t\t\t\t\t\t\tqueueUrl: event.commerceTools.subscription.queueUrl,\n\t\t\t\t\t\t\t\t\taccessKey: {\n\t\t\t\t\t\t\t\t\t\tRef: userCredsResourceName,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsecretKey: {\n\t\t\t\t\t\t\t\t\t\t'Fn::GetAtt': [userCredsResourceName, 'SecretAccessKey'],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tregion: serverless.service.provider.region,\n\t\t\t\t\t\t\t\t\tmessages: event.commerceTools.subscription.messages,\n\t\t\t\t\t\t\t\t\tchanges: event.commerceTools.subscription.changes,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}),\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t};\n\n\tuploadCustomResourceArtifact = async () => {\n\t\tthis.serverless.cli.log('[CommerceTools] Uploading custom resource artifact...');\n\n\t\tawait this.serverless.getProvider('aws').request('S3', 'upload', {\n\t\t\tBody: fs.createReadStream(path.join(__dirname, 'lambda.zip')),\n\t\t\tBucket: await this.serverless.getProvider('aws').getServerlessDeploymentBucketName(),\n\t\t\tKey: this.s3CustomResourceArtifactPath!,\n\t\t});\n\t};\n\n\thooks = {\n\t\t'before:package:createDeploymentArtifacts': this.updateFunctionsEvents,\n\t\t'before:package:finalize': this.addResources,\n\t\t'after:aws:deploy:deploy:uploadArtifacts': this.uploadCustomResourceArtifact,\n\t};\n}\n\nmodule.exports = ServerlessPlugin;\n"]}