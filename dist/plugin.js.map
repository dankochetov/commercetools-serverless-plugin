{"version":3,"sources":["plugin.ts"],"names":[],"mappings":"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","file":"plugin.js","sourceRoot":"../src","sourcesContent":["import 'source-map-support/register';\n\nimport Serverless from 'serverless';\nimport path from 'path';\nimport fs from 'fs-extra';\nimport { IAM, Lambda, SQS, Fn } from 'cloudform-types';\nimport type { Policy as IAMUserPolicy } from 'cloudform-types/types/iam/user';\n\nimport {\n\tCTEvent,\n\tCustomResourcePropertiesSource,\n\tExtensionEvent,\n\tSubscriptionEvent,\n} from './lib/types';\n\ninterface Options {}\n\ninterface Config {\n\tprojectKey: string;\n\tclientId: string;\n\tclientSecret: string;\n\tapiHost: string;\n\tauthHost: string;\n}\n\nfunction isCTEvent(e: object): e is CTEvent {\n\treturn Object.prototype.hasOwnProperty.call(e, 'commerceTools');\n}\n\nfunction isSubscriptionEvent(e: object): e is SubscriptionEvent {\n\treturn isCTEvent(e) && Object.prototype.hasOwnProperty.call(e.commerceTools, 'subscription');\n}\n\nfunction isExtensionEvent(e: object): e is ExtensionEvent {\n\treturn isCTEvent(e) && Object.prototype.hasOwnProperty.call(e.commerceTools, 'extension');\n}\n\nclass ServerlessPlugin {\n\tcommands = {};\n\n\tprivate s3CustomResourceArtifactPath: string | undefined;\n\n\tconstructor(public serverless: Serverless, public options: Options) {\n\t\tserverless.configSchemaHandler.defineFunctionEvent('aws', 'commerceTools', {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tsubscription: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tchanges: {\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\tminItems: 1,\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tresourceTypeId: { type: 'string' },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: ['resourceTypeId'],\n\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmessages: {\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\tminItems: 1,\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tresourceTypeId: { type: 'string' },\n\t\t\t\t\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\t\t\tminItems: 1,\n\t\t\t\t\t\t\t\t\t\titems: { type: 'string' },\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: ['resourceTypeId'],\n\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tqueueUrl: {\n\t\t\t\t\t\t\toneOf: [{ type: 'string' }, { type: 'object' }],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tqueueArn: {\n\t\t\t\t\t\t\toneOf: [{ type: 'string' }, { type: 'object' }],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbatchSize: { type: 'number' },\n\t\t\t\t\t\tcreateQueue: { type: 'boolean' },\n\t\t\t\t\t},\n\t\t\t\t\tanyOf: [{ required: ['changes'] }, { required: ['messages'] }],\n\t\t\t\t},\n\t\t\t\textension: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\ttimeoutInMs: { type: 'integer', minimum: 1 },\n\t\t\t\t\t\ttriggers: {\n\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\tminItems: 1,\n\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\tresourceTypeId: { type: 'string' },\n\t\t\t\t\t\t\t\t\tactions: {\n\t\t\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\t\t\tminItems: 1,\n\t\t\t\t\t\t\t\t\t\tmaxItems: 2,\n\t\t\t\t\t\t\t\t\t\tuniqueItems: true,\n\t\t\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\t\tenum: ['Create', 'Update'],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\trequired: ['resourceTypeId', 'actions'],\n\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['triggers'],\n\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tadditionalProperties: false,\n\t\t});\n\n\t\tserverless.configSchemaHandler.defineCustomProperties({\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tcommerceTools: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tprojectKey: { type: 'string' },\n\t\t\t\t\t\tclientId: { type: 'string' },\n\t\t\t\t\t\tclientSecret: { type: 'string' },\n\t\t\t\t\t\tapiHost: { type: 'string' },\n\t\t\t\t\t\tauthHost: { type: 'string' },\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['projectKey', 'clientId', 'clientSecret', 'apiHost', 'authHost'],\n\t\t\t\t},\n\t\t\t},\n\t\t\trequired: ['commerceTools'],\n\t\t});\n\t}\n\n\tupdateFunctionsEvents = () => {\n\t\tconst { serverless } = this;\n\n\t\tconst fns = this.listFunctions();\n\t\tconst subsList = Object.entries(fns).filter(([, { events }]) =>\n\t\t\tevents.some(isSubscriptionEvent),\n\t\t);\n\t\tconst extsList = Object.entries(fns).filter(([, { events }]) =>\n\t\t\tevents.some(isExtensionEvent),\n\t\t);\n\n\t\tif (subsList.length || extsList.length) {\n\t\t\tserverless.cli.log('CommerceTools functions found:');\n\t\t\tsubsList.forEach(([fnName, { events }]) =>\n\t\t\t\tserverless.cli.log(`  - ${fnName} - ${events.length} subscription(s)`),\n\t\t\t);\n\t\t\textsList.forEach(([fnName, { events }]) =>\n\t\t\t\tserverless.cli.log(`  - ${fnName} - ${events.length} extension(s)`),\n\t\t\t);\n\t\t}\n\n\t\tObject.entries(fns).forEach(([fnName, { fn, events }]) => {\n\t\t\tconst fnResourceName = this.transformCFNResourceName(fnName);\n\n\t\t\tevents.filter(isSubscriptionEvent).forEach((event, eventIndex) => {\n\t\t\t\tfn.events.push({\n\t\t\t\t\tsqs: {\n\t\t\t\t\t\tarn: Fn.GetAtt(\n\t\t\t\t\t\t\tthis.getCustomResourceName(fnResourceName),\n\t\t\t\t\t\t\t`SubscriptionQueueArn${eventIndex + 1}`,\n\t\t\t\t\t\t).toJSON(),\n\t\t\t\t\t\tbatchSize: event.commerceTools.subscription.batchSize ?? 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\taddResources = () => {\n\t\tconst { serverless } = this;\n\t\tconst config = serverless.service.custom.commerceTools as Config;\n\t\tconst resources = serverless.service.provider.compiledCloudFormationTemplate.Resources;\n\n\t\tObject.entries(this.listFunctions()).forEach(([fnName, { events }]) => {\n\t\t\tserverless.cli.log(`[CommerceTools] Creating resources for ${fnName}...`);\n\n\t\t\tconst fnResourceName = this.transformCFNResourceName(fnName);\n\n\t\t\tconst resourceNamePrefix = `${serverless.service.getServiceName()}-${serverless\n\t\t\t\t.getProvider('aws')\n\t\t\t\t.getStage()}-`;\n\n\t\t\tlet subscriptionEventIndex = 0;\n\t\t\tlet extensionEventIndex = 0;\n\n\t\t\tevents.forEach((event) => {\n\t\t\t\tlet eventType: 'Subscription' | 'Extension';\n\t\t\t\tlet eventIndex: number;\n\t\t\t\tswitch (true) {\n\t\t\t\t\tcase isSubscriptionEvent(event):\n\t\t\t\t\t\teventType = 'Subscription';\n\t\t\t\t\t\teventIndex = subscriptionEventIndex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase isExtensionEvent(event):\n\t\t\t\t\t\teventType = 'Extension';\n\t\t\t\t\t\teventIndex = extensionEventIndex++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('unknown event type');\n\t\t\t\t}\n\n\t\t\t\tconst userResourceName = this.getUserResourceName(\n\t\t\t\t\tfnResourceName,\n\t\t\t\t\teventType,\n\t\t\t\t\teventIndex,\n\t\t\t\t);\n\t\t\t\tconst userCredsResourceName = this.getUserCredsResourceName(\n\t\t\t\t\tfnResourceName,\n\t\t\t\t\teventType,\n\t\t\t\t\teventIndex,\n\t\t\t\t);\n\n\t\t\t\tconst userResource = new IAM.User({\n\t\t\t\t\tUserName: `${resourceNamePrefix}${fnName}${eventType}${eventIndex + 1}`,\n\t\t\t\t});\n\t\t\t\tresources[userResourceName] = userResource;\n\n\t\t\t\tresources[userCredsResourceName] = new IAM.AccessKey({\n\t\t\t\t\tStatus: 'Active',\n\t\t\t\t\tUserName: Fn.Ref(userResourceName),\n\t\t\t\t});\n\n\t\t\t\tconst userPolicies: IAMUserPolicy[] = [];\n\n\t\t\t\tif (isSubscriptionEvent(event)) {\n\t\t\t\t\tif (event.commerceTools.subscription.createQueue) {\n\t\t\t\t\t\tconst queueResourceName = `${fnResourceName}SubscriptionQueue${eventIndex + 1}`;\n\n\t\t\t\t\t\tresources[queueResourceName] = new SQS.Queue({\n\t\t\t\t\t\t\tQueueName: `${resourceNamePrefix}${fnName}-subscription-queue-${\n\t\t\t\t\t\t\t\teventIndex + 1\n\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tevent.commerceTools.subscription.queueUrl = Fn.Ref(queueResourceName);\n\t\t\t\t\t\tevent.commerceTools.subscription.queueArn = Fn.GetAtt(queueResourceName, 'Arn');\n\t\t\t\t\t}\n\n\t\t\t\t\tuserPolicies.push(\n\t\t\t\t\t\tnew IAM.User.Policy({\n\t\t\t\t\t\t\tPolicyName: 'AllowPushToSQS',\n\t\t\t\t\t\t\tPolicyDocument: {\n\t\t\t\t\t\t\t\tVersion: '2012-10-17',\n\t\t\t\t\t\t\t\tStatement: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tEffect: 'Allow',\n\t\t\t\t\t\t\t\t\t\tAction: 'sqs:SendMessage',\n\t\t\t\t\t\t\t\t\t\tResource: event.commerceTools.subscription.queueArn,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (isExtensionEvent(event)) {\n\t\t\t\t\tuserPolicies.push(\n\t\t\t\t\t\tnew IAM.User.Policy({\n\t\t\t\t\t\t\tPolicyName: 'AllowLambdaInvoke',\n\t\t\t\t\t\t\tPolicyDocument: {\n\t\t\t\t\t\t\t\tVersion: '2012-10-17',\n\t\t\t\t\t\t\t\tStatement: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tEffect: 'Allow',\n\t\t\t\t\t\t\t\t\t\tAction: 'lambda:InvokeFunction',\n\t\t\t\t\t\t\t\t\t\tResource: Fn.GetAtt(\n\t\t\t\t\t\t\t\t\t\t\t`${fnResourceName}LambdaFunction`,\n\t\t\t\t\t\t\t\t\t\t\t'Arn',\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tuserResource.Properties.Policies = userPolicies;\n\t\t\t});\n\n\t\t\tconst customResourceName = this.getCustomResourceName(fnResourceName);\n\t\t\tconst customResourceLambdaName = `${customResourceName}LambdaFunction`;\n\t\t\tconst customResourceLambdaRoleName = `${customResourceName}Role`;\n\n\t\t\tresources[customResourceLambdaRoleName] = new IAM.Role({\n\t\t\t\tAssumeRolePolicyDocument: {\n\t\t\t\t\tVersion: '2012-10-17',\n\t\t\t\t\tStatement: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tEffect: 'Allow',\n\t\t\t\t\t\t\tPrincipal: {\n\t\t\t\t\t\t\t\tService: ['lambda.amazonaws.com'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tAction: ['sts:AssumeRole'],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tManagedPolicyArns: [\n\t\t\t\t\t'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole',\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tif (!this.s3CustomResourceArtifactPath) {\n\t\t\t\tthis.s3CustomResourceArtifactPath =\n\t\t\t\t\tpath.dirname(\n\t\t\t\t\t\tresources[`${fnResourceName}LambdaFunction`].Properties.Code.S3Key,\n\t\t\t\t\t) + '/commercetools-serverless-plugin-custom-resource.zip';\n\t\t\t}\n\n\t\t\tresources[customResourceLambdaName] = new Lambda.Function({\n\t\t\t\tHandler: 'lambda.handler',\n\t\t\t\tFunctionName:\n\t\t\t\t\t`${resourceNamePrefix}${fnName}`.slice(0, 64 - '-custom-resource'.length) +\n\t\t\t\t\t'-custom-resource',\n\t\t\t\tCode: {\n\t\t\t\t\tS3Bucket: Fn.Ref('ServerlessDeploymentBucket'),\n\t\t\t\t\tS3Key: this.s3CustomResourceArtifactPath,\n\t\t\t\t},\n\t\t\t\tTimeout: 60,\n\t\t\t\tRuntime: 'nodejs12.x',\n\t\t\t\tRole: Fn.GetAtt(customResourceLambdaRoleName, 'Arn'),\n\t\t\t});\n\n\t\t\tconst customResourceProperties: CustomResourcePropertiesSource = {\n\t\t\t\tServiceToken: Fn.GetAtt(customResourceLambdaName, 'Arn'),\n\t\t\t\tfnName,\n\t\t\t\tauthHost: config.authHost,\n\t\t\t\tapiHost: config.apiHost,\n\t\t\t\tprojectKey: config.projectKey,\n\t\t\t\tclientId: config.clientId,\n\t\t\t\tclientSecret: config.clientSecret,\n\t\t\t\tsubscriptions: events.filter(isSubscriptionEvent).map((event, eventIndex) => ({\n\t\t\t\t\tqueueUrl: event.commerceTools.subscription.queueUrl,\n\t\t\t\t\tqueueArn: event.commerceTools.subscription.queueArn,\n\t\t\t\t\taccessKey: Fn.Ref(\n\t\t\t\t\t\tthis.getUserCredsResourceName(fnResourceName, 'Subscription', eventIndex),\n\t\t\t\t\t),\n\t\t\t\t\tsecretKey: Fn.GetAtt(\n\t\t\t\t\t\tthis.getUserCredsResourceName(fnResourceName, 'Subscription', eventIndex),\n\t\t\t\t\t\t'SecretAccessKey',\n\t\t\t\t\t),\n\t\t\t\t\tregion: serverless.service.provider.region,\n\t\t\t\t\tmessages: event.commerceTools.subscription.messages,\n\t\t\t\t\tchanges: event.commerceTools.subscription.changes,\n\t\t\t\t})),\n\t\t\t\textensions: events.filter(isExtensionEvent).map((event, eventIndex) => ({\n\t\t\t\t\tlambdaArn: Fn.GetAtt(`${fnResourceName}LambdaFunction`, 'Arn'),\n\t\t\t\t\ttimeoutInMs: event.commerceTools.extension.timeoutInMs,\n\t\t\t\t\taccessKey: Fn.Ref(\n\t\t\t\t\t\tthis.getUserCredsResourceName(fnResourceName, 'Extension', eventIndex),\n\t\t\t\t\t),\n\t\t\t\t\tsecretKey: Fn.GetAtt(\n\t\t\t\t\t\tthis.getUserCredsResourceName(fnResourceName, 'Extension', eventIndex),\n\t\t\t\t\t\t'SecretAccessKey',\n\t\t\t\t\t),\n\t\t\t\t\ttriggers: event.commerceTools.extension.triggers,\n\t\t\t\t})),\n\t\t\t};\n\n\t\t\tresources[customResourceName] = {\n\t\t\t\tType: 'Custom::CommerceToolsSubscription',\n\t\t\t\tProperties: customResourceProperties,\n\t\t\t};\n\t\t});\n\t};\n\n\tuploadCustomResourceArtifact = async () => {\n\t\tthis.serverless.cli.log('[CommerceTools] Uploading custom resource artifact...');\n\n\t\tawait this.serverless.getProvider('aws').request('S3', 'upload', {\n\t\t\tBody: fs.createReadStream(path.join(__dirname, 'lambda.zip')),\n\t\t\tBucket: await this.serverless.getProvider('aws').getServerlessDeploymentBucketName(),\n\t\t\tKey: this.s3CustomResourceArtifactPath!,\n\t\t});\n\t};\n\n\tprivate listFunctions() {\n\t\tconst { serverless } = this;\n\t\tconst res: Record<\n\t\t\tstring,\n\t\t\t{\n\t\t\t\tfn: Serverless.FunctionDefinitionHandler | Serverless.FunctionDefinitionImage;\n\t\t\t\tevents: CTEvent[];\n\t\t\t}\n\t\t> = {};\n\n\t\tObject.entries(serverless.service.functions).forEach(([fnName, fn]) => {\n\t\t\tfn.events?.forEach((event) => {\n\t\t\t\tif (isCTEvent(event)) {\n\t\t\t\t\tif (!res[fnName]) {\n\t\t\t\t\t\tres[fnName] = {\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tevents: [],\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tres[fnName].events.push(event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn res;\n\t}\n\n\tprivate transformCFNResourceName(name: string): string {\n\t\tname = name.replace('-', 'Dash').replace('_', 'Underscore');\n\t\treturn name[0].toUpperCase() + name.slice(1);\n\t}\n\n\tprivate getCustomResourceName(fnResourceName: string): string {\n\t\treturn `${fnResourceName}CommerceToolsResource`;\n\t}\n\n\tprivate getUserResourceName(\n\t\tfnResourceName: string,\n\t\teventType: 'Subscription' | 'Extension',\n\t\teventIndex: number,\n\t): string {\n\t\treturn `${fnResourceName}${eventType}ServiceUser${eventIndex + 1}`;\n\t}\n\n\tprivate getUserCredsResourceName(\n\t\tfnResourceName: string,\n\t\teventType: 'Subscription' | 'Extension',\n\t\teventIndex: number,\n\t): string {\n\t\treturn `${fnResourceName}${eventType}ServiceUserCreds${eventIndex + 1}`;\n\t}\n\n\thooks = {\n\t\t'before:package:createDeploymentArtifacts': this.updateFunctionsEvents,\n\t\t'before:package:finalize': this.addResources,\n\t\t'after:aws:deploy:deploy:uploadArtifacts': this.uploadCustomResourceArtifact,\n\t};\n}\n\nmodule.exports = ServerlessPlugin;\n"]}